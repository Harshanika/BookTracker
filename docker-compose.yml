services:
  db:
    image: postgres:15
    container_name: booktracker_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: booktracker_api
    restart: on-failure
    env_file:
        - ./backend/.env
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
        - db
    ports:
        - "4000:4000"         # expose backend port to host
    volumes:
        - ./backend:/app
        - /app/node_modules

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: booktracker_web
    restart: unless-stopped
    expose:
      - "3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules

  nginx:
    image: nginx:1.27-alpine
    container_name: booktracker_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  db_data:
